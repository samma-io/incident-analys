<source>
  @type tail
  path /opt/input/*.json
  pos_file /opt/state/json.pos
  tag json
  read_from_head true
  <parse>
    @type json
  </parse>
</source>

<source>
  @type tail
  path /opt/input/*.log
  pos_file /opt/state/files.pos
  tag files
  read_from_head true
  <parse>
    @type none
  </parse>
</source>




<source>
  @type tail
  path /opt/input/iis/*.log
  pos_file /opt/state/iis.pos
  tag iis
  read_from_head true
  <parse>
    @type regexp
    expression /(?<time>\d{4}-\d{2}-\d{2} [\d:]+) (?<message>.+)/
    time_format %Y-%m-%d %H:%M:%S
	  utc true
  </parse>
</source>


<source>
  @type tail
  path /opt/input/ws02/*.log
  pos_file /opt/state/ws02.pos
  tag ws02
  read_from_head true
  <parse>
      @type multiline
      format_firstline /(.*?):\s*(?<id>\[.*?\])\s*(?<n>\[.*?\])/
      format1 /^(.*?):\s*(?<id>\[.*?\])\s*(?<n>\[.*?\])\s*\[(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}),\d+]\s*(?<level>\S*)\s(?<logger>\S*)\s(?<space>\S*)\s*(?<message>.*)/
  </parse>
</source>

#### Time to parse the logs to json 


<filter iis.**>
  @type parser
  key_name message
  remove_key_name_field false
  reserve_data false
  reserve_time true
  <parse>
    @type csv
    delimiter ' '
    keys hostname,method,path,cs-uri-query,s_port,cs-username,remote,agent,referer,code,sc-substatus,sc-win32-status,time-taken
    null_value_pattern -
    null_empty_string true
  </parse>
</filter>


<filter files.**>
  @type parser
  key_name message
  reserve_data false
  reserve_time true
  <parse>
    @type multi_format
    <pattern>
      format json
      time_key time
    </pattern>
    <pattern>
      format syslog
    </pattern>
    <pattern>
      format nginx
    </pattern>
    <pattern>
      format apache
    </pattern>
    <pattern>
      format apache_error
    </pattern>
    <pattern>
      format apache_error
    </pattern>
    <pattern>
      format none
    </pattern>
  </parse>
</filter>



## Fix Time


<filter iis.**>
  @type record_transformer
  enable_ruby
  <record>
    @timestamp ${time}
  </record>
  <record>
    dest file.iis
  </record>
</filter>

<filter ws02.**>
  @type record_transformer
  enable_ruby
  <record>
    @timestamp ${time}
  </record>
    <record>
    dest file.ws02
  </record>
</filter>

<filter files.**>
  @type record_transformer
  enable_ruby
  <record>
    @timestamp ${record['time']}
  </record>
    <record>
    dest file.files
  </record>
</filter>



## Reroute
<match ws02.**>
  @type rewrite_tag_filter
  <rule>
    key dest
    pattern /.+/
    tag file.ws02
  </rule>
</match>


<match iis.**>
  @type rewrite_tag_filter
  <rule>
    key dest
    pattern /.+/
    tag file.iis
  </rule>
</match>

<match files.**>
  @type rewrite_tag_filter
  <rule>
    key dest
    pattern /.+/
    tag file.files
  </rule>
</match>
### Outputs


<match file.**>
  @type file
  path /opt/output/data
  <format>
  @type json
</format>
<buffer>
    timekey 1m
    timekey_use_utc true
    timekey_wait 0m
    @type file
    path /tmp/

  </buffer>
</match>


<match files.**>
  @type stdout
</match>